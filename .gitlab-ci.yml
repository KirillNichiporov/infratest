stages:
  - lint
  - build
  - deploy-test
  - notify

default:
  image: alpine

Linter Python:
  stage: lint 
  image: python:3.9.22-alpine
  tags: [devops-test]
  script:
    - pip install flake8 flake8-sarif
    - flake8 --version
    - flake8 server/server.py
  allow_failure: true

Build Docker images:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.23.2-debug
    entrypoint: [""]
  tags: [devops-test]
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/server"
      --dockerfile "${CI_PROJECT_DIR}/server/Dockerfile"
      --destination "localhost:5000/server:${CI_COMMIT_TAG}"

Deploy to staging AND Test:
  stage: deploy-test
  image: docker
  services: 
    - name: docker:dind
      entrypoint: ["sh", "-c", "dockerd-entrypoint.sh --insecure-registry=registry:5000"]
  tags: [devops-test]
  variables: 
    DOCKER_HOST: ""
    DOCKER_TLS_CERTDIR: ""
  script:
    - apk update
    - apk add curl
    - docker context create staging-context --docker host=tcp://localhost:2375
    - docker context use staging-context
    - docker run -d -p 80:80 registry:5000/server:latest
    - docker ps
    - curl --fail http://localhost:80/health || exit 1
    - sh ${CI_PROJECT_DIR}/notify.sh ✅

Notification for Errors:
  stage: notify
  image: alpine/curl
  tags: [devops-test]
  script:
    - sh ${CI_PROJECT_DIR}/notify.sh ❌
  when: on_failure